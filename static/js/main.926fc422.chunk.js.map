{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","createBucket","length","slice","join","updateGoods","good","setState","prevState","includes","filter","item","this","className","type","onClick","map","classNames","checked","find","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,aAAe,SAACD,GACd,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUF,EAAV,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDJ,EAAcA,EAAcE,OAAS,GAA5F,mB,EAING,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,OAAOA,EAAUR,cAAcS,SAASH,GACpC,CAAEN,cAAeQ,EAAUR,cAAcU,QAAO,SAAAC,GAAI,OAAIA,IAASL,MACjE,CAAEN,cAAc,GAAD,mBAAMQ,EAAUR,eAAhB,CAA+BM,S,4CAItD,WAAU,IAAD,OACCN,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,YAAd,iCAEGD,KAAKX,aAAaD,GACnB,wBACEa,UAAU,aACVC,KAAK,SACLC,QAAS,kBAAM,EAAKR,SAAS,CAAEP,cAAe,MAHhD,kBASF,oBAAIa,UAAU,QAAd,SACGhB,EAAgBmB,KAAI,SAAAV,GAAI,OACvB,qBAEEO,UAAU,OAFZ,UAIE,mBAAGA,UAAU,aAAb,SACGP,IAEH,wBACEQ,KAAK,SACLD,UAAWI,IACT,YACA,CACEC,QAASZ,IAASN,EAAcmB,MAAK,SAAAR,GAAI,OAAIA,IAASL,OAG1DS,QAAS,kBAAM,EAAKV,YAAYC,IARlC,sBANKA,e,GA7CDc,IAAMC,WAuETvB,ICzFfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.926fc422.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [],\n  };\n\n  createBucket = (selectedGoods: string[]) => {\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No selected goods';\n        break;\n      case 1:\n        return `${selectedGoods} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  updateGoods = (good: string) => {\n    this.setState((prevState: State) => {\n      return prevState.selectedGoods.includes(good)\n        ? { selectedGoods: prevState.selectedGoods.filter(item => item !== good) }\n        : { selectedGoods: [...prevState.selectedGoods, good] };\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-title\">\n          Selected good: -&nbsp;\n          {this.createBucket(selectedGoods)}\n          <button\n            className=\"btn-cancel\"\n            type=\"button\"\n            onClick={() => this.setState({ selectedGoods: [] })}\n          >\n            X\n          </button>\n        </h1>\n\n        <ol className=\"goods\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className=\"good\"\n            >\n              <p className=\"good__name\">\n                {good}\n              </p>\n              <button\n                type=\"button\"\n                className={classNames(\n                  'good__btn',\n                  {\n                    checked: good === selectedGoods.find(item => item === good),\n                  },\n                )}\n                onClick={() => this.updateGoods(good)}\n              >\n                Select\n              </button>\n            </li>\n          ))}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}